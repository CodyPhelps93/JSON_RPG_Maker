{
    "StartingRoom": "Hallway",
    "GameRules": [
        "Navigate rooms using directions 'go <direction>' (e.g., 'go north').",
        "Pick up items with 'take <item>' (e.g., 'take key').",
        "Check your inventory with 'inventory'.",
        "Type 'rules' to see these rules again.",
        "Type 'quit' to exit the game. Good luck!"
    ],
    "Rooms": [
    {
        "Name": "Hallway",
        "Description": "You are in a long hallway. There are doors to the north and south.",
        "Exits": { "north": "Kitchen", "south": "Bedroom" },
        "Items": ["key", "map"]
    },
    {
        "Name": "Kitchen",
        "Description": "You are in a kitchen. There is a door to the south.",
        "Exits": { "south": "Hallway" },
        "Items": ["knife", "apple"]
    },
    {
        "Name": "Bedroom",
        "Description": "You are in a cozy bedroom. There is a door to the north.",
        "Exits": { "north": "Hallway" },
        "Items": ["pillow", "blanket"]
    }
],
"PlayerCommands": [
    { 
        "Name": "go",
        "Description": "Move in a specified direction (e.g., 'go north').",
        "LScript": "if room.Exits[direction] then player.CurrentRoom = room.Exits[direction] print('You move ' .. direction .. ' to ' .. player.CurrentRoom) else print('You can\\'t go that way.') end"
    },
    {
        "Name": "take",
        "Description": "Pick up an item from the current room.",
        "LScript": "for i = 1, room.Items.Count do local item = room.Items[i - 1] if item == target then room.Items:Remove(item) player.Inventory:Add(item) print('You took the ' .. item) return end end print('Item not found in the room.')"

    },
    {
        "Name": "inventory",
        "Description": "Show your current inventory.",
        "LScript": "local count = player.Inventory.Count if count == 0 then print('Your inventory is empty.') else local items = {} for i = 0, count - 1 do items[i+1] = player.Inventory[i] end print('Inventory: ' .. table.concat(items, ', ')) end"
    }
    
]

}